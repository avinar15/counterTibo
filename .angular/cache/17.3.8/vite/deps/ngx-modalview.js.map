{
  "version": 3,
  "sources": ["../../../../../node_modules/ngx-modalview/fesm2022/ngx-modalview.mjs"],
  "sourcesContent": ["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injector, ViewContainerRef, ElementRef, Component, ViewChild, EventEmitter, Directive, Input, Output, Inject, Injectable, Optional, ComponentFactoryResolver, ApplicationRef, NgModule, HostListener } from '@angular/core';\nimport { Subject, fromEvent, of, BehaviorSubject, Observable } from 'rxjs';\nimport { filter, map, switchMap, takeUntil } from 'rxjs/operators';\nconst _c0 = [\"viewContainer\"];\nconst _c1 = [\"wrapper\"];\nconst _c2 = () => ({\n  display: \"block\"\n});\nfunction NgxModalWrapperComponent_ng_template_2_Template(rf, ctx) {}\nfunction NgxModalHolderComponent_ng_template_0_Template(rf, ctx) {}\nconst DefaultNgxModalOptionConfig = new InjectionToken('default-ngx-modal.config');\nconst defaultNgxModalOptions = {\n  closeOnEscape: false,\n  closeOnClickOutside: false,\n  bodyClass: 'modal-open',\n  wrapperDefaultClasses: 'modal fade-anim',\n  wrapperClass: 'in',\n  draggableClass: 'draggable',\n  animationDuration: 300,\n  autoFocus: false,\n  draggable: false\n};\n\n/**\n * The modal backdrop wrapping wrapper to the modal\n */\nclass NgxModalWrapperComponent {\n  resolver;\n  /**\n   * Target viewContainer to insert modal content component\n   */\n  viewContainer;\n  /**\n   * Link wrapper DOM element\n   */\n  wrapper;\n  /**\n   * Wrapper modal and fade classes\n   */\n  modalClasses = 'modal fade-anim';\n  /**\n   * Dialog content componet\n   * @type {NgxModalComponent}\n   */\n  content;\n  /**\n   * Click outside callback\n   */\n  clickOutsideCallback;\n  /**\n   * Constructor\n   * @param {ComponentFactoryResolver} resolver\n   */\n  constructor(resolver) {\n    this.resolver = resolver;\n  }\n  ngOnDestroy() {\n    if (this.clickOutsideCallback) {\n      const containerEl = this.wrapper.nativeElement;\n      containerEl.removeEventListener('click', this.clickOutsideCallback, false);\n      this.clickOutsideCallback = null;\n    }\n  }\n  /**\n   * Adds content modal component to wrapper\n   * @param {Type<NgxModalComponent>} component\n   * @return {NgxModalComponent}\n   */\n  addComponent(component) {\n    const factory = this.resolver.resolveComponentFactory(component);\n    const injector = Injector.create([], this.viewContainer.injector);\n    const componentRef = factory.create(injector);\n    this.viewContainer.insert(componentRef.hostView);\n    this.content = componentRef.instance;\n    this.content.wrapper = this.wrapper;\n    return {\n      ref: componentRef,\n      component: this.content\n    };\n  }\n  /**\n   * Configures the function to call when you click on background of a modal but not the contents\n   * @param callback\n   */\n  onClickOutsideModalContent(callback) {\n    const containerEl = this.wrapper.nativeElement;\n    this.clickOutsideCallback = event => {\n      if (event.target === containerEl) {\n        callback();\n      }\n    };\n    containerEl.addEventListener('click', this.clickOutsideCallback, false);\n  }\n  static ɵfac = function NgxModalWrapperComponent_Factory(t) {\n    return new (t || NgxModalWrapperComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxModalWrapperComponent,\n    selectors: [[\"ngx-modal-wrapper\"]],\n    viewQuery: function NgxModalWrapperComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n        i0.ɵɵviewQuery(_c1, 7, ElementRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n      }\n    },\n    decls: 4,\n    vars: 3,\n    consts: [[\"wrapper\", \"\"], [\"viewContainer\", \"\"], [\"role\", \"dialog\", 3, \"ngClass\", \"ngStyle\"]],\n    template: function NgxModalWrapperComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 2, 0);\n        i0.ɵɵtemplate(2, NgxModalWrapperComponent_ng_template_2_Template, 0, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.modalClasses)(\"ngStyle\", i0.ɵɵpureFunction0(2, _c2));\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgStyle],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxModalWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-modal-wrapper',\n      template: `\n    <div #wrapper [ngClass]=\"modalClasses\" [ngStyle]=\"{ display: 'block' }\" role=\"dialog\">\n      <ng-template #viewContainer></ng-template>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }];\n  }, {\n    viewContainer: [{\n      type: ViewChild,\n      args: ['viewContainer', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }],\n    wrapper: [{\n      type: ViewChild,\n      args: ['wrapper', {\n        read: ElementRef,\n        static: true\n      }]\n    }]\n  });\n})();\nclass DraggableDirective {\n  host;\n  zone;\n  renderer;\n  dragHandle;\n  dragTarget;\n  dragEnabled = false;\n  set dialogDragOffset(offset) {\n    this.reset(offset);\n  }\n  dragged = new EventEmitter();\n  /** Element to be dragged */\n  target;\n  /** Drag handle */\n  handle;\n  delta = {\n    x: 0,\n    y: 0\n  };\n  offset = {\n    x: 0,\n    y: 0\n  };\n  enabled = true;\n  destroy$ = new Subject();\n  constructor(host, zone, renderer) {\n    this.host = host;\n    this.zone = zone;\n    this.renderer = renderer;\n  }\n  ngAfterViewInit() {\n    if (!this.enabled) {\n      return;\n    }\n    this.init();\n  }\n  ngOnChanges() {\n    if (!this.enabled && this.dragEnabled && this.dragTarget) {\n      this.enabled = true;\n      /** determine if the component has been init by the handle variable */\n      if (this.handle) {\n        this.renderer.setStyle(this.handle, 'cursor', 'move');\n      } else if (this.enabled) {\n        this.init();\n      }\n    }\n    if (!this.dragEnabled) {\n      this.enabled = false;\n      if (this.handle) {\n        this.renderer.setStyle(this.handle, 'cursor', '');\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n  reset(offset) {\n    const defaultValues = {\n      x: 0,\n      y: 0\n    };\n    this.offset = {\n      ...defaultValues,\n      ...offset\n    };\n    this.delta = {\n      ...defaultValues\n    };\n    this.translate();\n  }\n  setupEvents() {\n    this.zone.runOutsideAngular(() => {\n      const mousedown$ = fromEvent(this.handle, 'mousedown');\n      const mousemove$ = fromEvent(document, 'mousemove');\n      const mouseup$ = fromEvent(document, 'mouseup');\n      const mousedrag$ = mousedown$.pipe(filter(() => this.enabled), map(event => ({\n        startX: event.clientX,\n        startY: event.clientY\n      })), switchMap(({\n        startX,\n        startY\n      }) => mousemove$.pipe(map(event => {\n        event.preventDefault();\n        this.delta = {\n          x: event.clientX - startX,\n          y: event.clientY - startY\n        };\n      }), takeUntil(mouseup$))), takeUntil(this.destroy$));\n      mousedrag$.subscribe(() => {\n        if (this.delta.x === 0 && this.delta.y === 0) {\n          return;\n        }\n        this.translate();\n      });\n      mouseup$.pipe(filter(() => this.enabled), /** Only emit change if the element has moved */\n      filter(() => this.delta.x !== 0 || this.delta.y !== 0), takeUntil(this.destroy$)).subscribe(() => {\n        this.offset.x += this.delta.x;\n        this.offset.y += this.delta.y;\n        this.dragged.emit(this.offset);\n        this.delta = {\n          x: 0,\n          y: 0\n        };\n      });\n    });\n  }\n  translate() {\n    if (this.target) {\n      this.zone.runOutsideAngular(() => {\n        requestAnimationFrame(() => {\n          const transform = `translate(${this.offset.x + this.delta.x}px, ${this.offset.y + this.delta.y}px)`;\n          this.renderer.setStyle(this.target, 'transform', transform);\n        });\n      });\n    }\n  }\n  /**\n   * Init the directive\n   */\n  init() {\n    if (!this.dragTarget) {\n      throw new Error('You need to specify the drag target');\n    }\n    this.handle = this.dragHandle instanceof Element ? this.dragHandle : typeof this.dragHandle === 'string' && this.dragHandle ? document.querySelector(this.dragHandle) : this.host.nativeElement;\n    /** add the move cursor */\n    if (this.handle && this.enabled) {\n      this.renderer.addClass(this.handle, 'handle');\n    }\n    this.target = this.dragTarget instanceof HTMLElement ? this.dragTarget : document.querySelector(this.dragTarget);\n    this.setupEvents();\n    this.translate();\n  }\n  static ɵfac = function DraggableDirective_Factory(t) {\n    return new (t || DraggableDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DraggableDirective,\n    selectors: [[\"\", \"dialogDraggable\", \"\"]],\n    inputs: {\n      dragHandle: \"dragHandle\",\n      dragTarget: \"dragTarget\",\n      dragEnabled: \"dragEnabled\",\n      dialogDragOffset: \"dialogDragOffset\"\n    },\n    outputs: {\n      dragged: \"dragged\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[dialogDraggable]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    dragHandle: [{\n      type: Input\n    }],\n    dragTarget: [{\n      type: Input\n    }],\n    dragEnabled: [{\n      type: Input\n    }],\n    dialogDragOffset: [{\n      type: Input\n    }],\n    dragged: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * View container manager which manages a list of modals currently active\n * inside the viewvontainer\n */\nclass NgxModalHolderComponent {\n  resolver;\n  renderer;\n  ngZone;\n  defaultNgxModalOptions;\n  /**\n   * Target viewContainer to insert modals\n   */\n  viewContainer;\n  /**\n   * modal collection, maintained by addModal and removeModal\n   * @type {Array<NgxModalComponent> }\n   */\n  modals = [];\n  /**\n   * if auto focus is on and no element focused, store it here to be restored back after close\n   */\n  previousActiveElement = null;\n  /**\n   * Constructor\n   * @param {ComponentFactoryResolver} resolver\n   * @param renderer\n   * @param ngZone\n   * @param defaultNgxModalOptions\n   */\n  constructor(resolver, renderer, ngZone, defaultNgxModalOptions) {\n    this.resolver = resolver;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.defaultNgxModalOptions = defaultNgxModalOptions;\n  }\n  /**\n   * Configures then adds modal to the modals array, and populates with data passed in\n   * @param {Type<NgxModalComponent>} component\n   * @param {object?} data\n   * @param {NgxModalOptionsOverrides?} options\n   * @return {Observable<*>}\n   */\n  addModal(component, data, options) {\n    // create component\n    if (!this.viewContainer) {\n      return of(null);\n    }\n    const factory = this.resolver.resolveComponentFactory(NgxModalWrapperComponent);\n    const componentRef = this.viewContainer.createComponent(factory);\n    const modalWrapper = componentRef.instance;\n    const {\n      ref: _componentRef,\n      component: _component\n    } = modalWrapper.addComponent(component);\n    // assign options refs\n    _component.options = options = Object.assign({}, this.defaultNgxModalOptions, options);\n    // set base classes for wrapper\n    modalWrapper.modalClasses = options.wrapperDefaultClasses;\n    // add to stack\n    this.modals.push(_component);\n    // wait a tick then setup the following while adding a modal\n    this.wait().then(() => {\n      this.toggleWrapperClass(modalWrapper.wrapper, options.wrapperClass);\n      this.toggleBodyClass(options.bodyClass);\n      if (options.draggable) {\n        this.setDraggable(_componentRef, options);\n      }\n      this.wait(options.animationDuration).then(() => {\n        this.autoFocusFirstElement(_component.wrapper, options.autoFocus);\n        _component.markAsReady();\n      });\n    });\n    // when closing modal remove it\n    _component.onClosing(modal => this.removeModal(modal));\n    // if clicking on background closes modal\n    this.configureCloseOnClickOutside(modalWrapper);\n    // map and return observable\n    _component.mapDataObject(data);\n    return _component.setupObserver();\n  }\n  /**\n   * triggers components close function\n   * to take effect\n   * @returns {Promise<void>}\n   * @param closingModal\n   */\n  async removeModal(closingModal) {\n    const options = closingModal.options;\n    this.toggleWrapperClass(closingModal.wrapper, options.wrapperClass);\n    return this.wait(options.animationDuration).then(() => {\n      this.removeModalFromArray(closingModal);\n      this.toggleBodyClass(options.bodyClass);\n      this.restorePreviousFocus();\n    });\n  }\n  /**\n   * Instructs all open modals to\n   */\n  removeAllModals() {\n    return Promise.all(this.modals.map(modal => this.removeModal(modal)));\n  }\n  /**\n   * Bind a body class 'modal-open' to a condition of modals in pool > 0\n   * @param bodyClass - string to add and remove from body in document\n   */\n  toggleBodyClass(bodyClass) {\n    if (!bodyClass) {\n      return;\n    }\n    const body = document.getElementsByTagName('body')[0];\n    const bodyClassItems = bodyClass.split(' ');\n    if (!this.modals.length) {\n      body.classList.remove(...bodyClassItems);\n    } else {\n      body.classList.add(...bodyClassItems);\n    }\n  }\n  /**\n   * if the option to close on background click is set, then hook up a callback\n   * @param modalWrapper\n   */\n  configureCloseOnClickOutside(modalWrapper) {\n    modalWrapper.onClickOutsideModalContent(() => {\n      if (modalWrapper.content.options.closeOnClickOutside) {\n        modalWrapper.content.close();\n      }\n    });\n  }\n  /**\n   * Auto focus o the first element if autofocus is on\n   * @param componentWrapper\n   * @param autoFocus\n   */\n  autoFocusFirstElement(componentWrapper, autoFocus) {\n    if (autoFocus) {\n      const focusable = componentWrapper.nativeElement.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n      if (focusable && focusable.length) {\n        this.previousActiveElement = document.activeElement;\n        focusable[0].focus();\n      }\n    }\n  }\n  /**\n   * Restores the last focus is there was one\n   */\n  restorePreviousFocus() {\n    if (this.previousActiveElement) {\n      this.previousActiveElement.focus();\n      this.previousActiveElement = null;\n    }\n  }\n  /**\n   * Configure the adding and removal of a wrapper class - predominantly animation focused\n   * @param modalWrapperEl\n   * @param wrapperClass\n   */\n  toggleWrapperClass(modalWrapperEl, wrapperClass) {\n    const wrapperClassList = modalWrapperEl.nativeElement.classList;\n    const wrapperClassItems = wrapperClass.split(' ');\n    if (wrapperClassList.toString().indexOf(wrapperClass) !== -1) {\n      wrapperClassList.remove(...wrapperClassItems);\n    } else {\n      wrapperClassList.add(...wrapperClassItems);\n    }\n  }\n  /**\n   * Enables the drag option on the modal if the options have it enabled\n   * @param component\n   * @param options\n   * @private\n   */\n  setDraggable(component, options) {\n    const draggableDirective = new DraggableDirective(component.location, this.ngZone, this.renderer);\n    draggableDirective.dragTarget = component.location.nativeElement;\n    draggableDirective.dragHandle = component.instance.handle ? component.instance.handle.nativeElement : undefined;\n    draggableDirective.ngAfterViewInit();\n    component.location.nativeElement.classList.add(options.draggableClass);\n  }\n  /**\n   * Helper function for a more readable timeout\n   * @param ms\n   */\n  wait(ms = 0) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(), ms);\n    });\n  }\n  /**\n   * Instructs the holder to remove the modal and\n   * removes this component from the collection\n   * @param {NgxModalComponent} component\n   */\n  removeModalFromArray(component) {\n    const index = this.modals.indexOf(component);\n    if (index > -1) {\n      this.viewContainer.remove(index);\n      this.modals.splice(index, 1);\n    }\n  }\n  static ɵfac = function NgxModalHolderComponent_Factory(t) {\n    return new (t || NgxModalHolderComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DefaultNgxModalOptionConfig));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxModalHolderComponent,\n    selectors: [[\"ngx-modal-holder\"]],\n    viewQuery: function NgxModalHolderComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewContainer = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"viewContainer\", \"\"]],\n    template: function NgxModalHolderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NgxModalHolderComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxModalHolderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-modal-holder',\n      template: '<ng-template #viewContainer></ng-template>'\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DefaultNgxModalOptionConfig]\n      }]\n    }];\n  }, {\n    viewContainer: [{\n      type: ViewChild,\n      args: ['viewContainer', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }]\n  });\n})();\nclass NgxModalServiceConfig {\n  container = null;\n}\nclass NgxModalService {\n  resolver;\n  applicationRef;\n  injector;\n  /**\n   * Placeholder of modals\n   * @type {NgxModalHolderComponent}\n   */\n  modalHolderComponent;\n  /**\n   * HTML container for modals\n   * type {HTMLElement | string}\n   */\n  _container;\n  constructor(resolver, applicationRef, injector, config) {\n    this.resolver = resolver;\n    this.applicationRef = applicationRef;\n    this.injector = injector;\n    if (config) {\n      this.container = config.container;\n    }\n  }\n  /**\n   * Accessor for contain - will auto generate from string\n   * if needed or default to the root element if nothing was set\n   */\n  set container(c) {\n    this._container = c;\n  }\n  get container() {\n    if (typeof this._container === 'string') {\n      this._container = document.getElementById(this._container);\n    }\n    if (!this._container && this.applicationRef['components'].length) {\n      const componentRootViewContainer = this.applicationRef['components'][0];\n      this.container = componentRootViewContainer.hostView.rootNodes[0];\n    }\n    if (!this._container || typeof this._container === 'string') {\n      this._container = document.getElementsByTagName('body')[0];\n    }\n    return this._container;\n  }\n  /**\n   * Creates and add to DOM modal holder component.\n   *\n   * @returns {NgxModalHolderComponent}\n   */\n  createSimpleModalHolder() {\n    const componentFactory = this.resolver.resolveComponentFactory(NgxModalHolderComponent);\n    const componentRef = componentFactory.create(this.injector);\n    const componentRootNode = componentRef.hostView.rootNodes[0];\n    this.applicationRef.attachView(componentRef.hostView);\n    componentRef.onDestroy(() => {\n      this.applicationRef.detachView(componentRef.hostView);\n    });\n    this.container.appendChild(componentRootNode);\n    return componentRef.instance;\n  }\n  /**\n   * Adds modal\n   *\n   * @param {Type<NgxModalComponent<T, T1>>} component\n   * @param {T?} data\n   * @param {NgxModalOptionsOverrides?} options\n   *\n   * @returns {Observable<T1>}\n   */\n  addModal(component, data, options) {\n    if (!this.modalHolderComponent) {\n      this.modalHolderComponent = this.createSimpleModalHolder();\n    }\n    return this.modalHolderComponent.addModal(component, data, options);\n  }\n  /**\n   * Hides and removes modal from DOM, resolves promise when fully removed\n   *\n   * @param {NgxModalComponent} component\n   *\n   * @returns {Promise<{}>}\n   */\n  removeModal(component) {\n    if (!this.modalHolderComponent) {\n      return Promise.resolve({});\n    }\n    return this.modalHolderComponent.removeModal(component);\n  }\n  /**\n   * Closes all modals, resolves promise when they're fully removed\n   *\n   * @returns {Promise<{}>}\n   */\n  removeAll() {\n    if (!this.modalHolderComponent) {\n      return Promise.resolve({});\n    }\n    return this.modalHolderComponent.removeAllModals();\n  }\n  static ɵfac = function NgxModalService_Factory(t) {\n    return new (t || NgxModalService)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(NgxModalServiceConfig, 8));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgxModalService,\n    factory: NgxModalService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxModalService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ApplicationRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: NgxModalServiceConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Modal service factory. Creates modal service with options\n * @param { ComponentFactoryResolver } resolver\n * @param { ApplicationRef } applicationRef\n * @param { Injector } injector\n * @param { NgxModalServiceConfig } options\n * @return { NgxModalService }\n */\nfunction NgxModalServiceFactory(resolver, applicationRef, injector, options) {\n  return new NgxModalService(resolver, applicationRef, injector, options);\n}\nclass NgxModalView {\n  static forRoot(config, defaultModalOptions) {\n    return {\n      ngModule: NgxModalView,\n      providers: [{\n        provide: NgxModalServiceConfig,\n        useValue: config\n      }, {\n        provide: NgxModalService,\n        useFactory: NgxModalServiceFactory,\n        deps: [ComponentFactoryResolver, ApplicationRef, Injector, NgxModalServiceConfig]\n      }, {\n        provide: DefaultNgxModalOptionConfig,\n        useValue: defaultModalOptions || defaultNgxModalOptions\n      }]\n    };\n  }\n  constructor() {}\n  static ɵfac = function NgxModalView_Factory(t) {\n    return new (t || NgxModalView)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxModalView,\n    declarations: [NgxModalHolderComponent, NgxModalWrapperComponent, DraggableDirective],\n    imports: [CommonModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [NgxModalService, {\n      provide: DefaultNgxModalOptionConfig,\n      useValue: defaultNgxModalOptions\n    }],\n    imports: [CommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxModalView, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxModalHolderComponent, NgxModalWrapperComponent, DraggableDirective],\n      providers: [NgxModalService, {\n        provide: DefaultNgxModalOptionConfig,\n        useValue: defaultNgxModalOptions\n      }],\n      imports: [CommonModule]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * Abstract modal\n * @template T - modal data;\n * @template T1 - modal result\n */\nclass NgxModalComponent {\n  /**\n   * Observer to return result from modal\n   */\n  observer;\n  /**\n   * Drag handle\n   */\n  handle;\n  /**\n   * Dialog result\n   * @type {T1}\n   */\n  result;\n  /**\n   * Dialog wrapper (modal placeholder)\n   */\n  wrapper;\n  /**\n   * ref of options for this component\n   */\n  options;\n  /**\n   * ready$ is when all animations and focusing have comleted\n   */\n  _ready$ = new BehaviorSubject(false);\n  /**\n   * Callback to the holders close function\n   */\n  closerCallback = () => Promise.resolve();\n  /**\n   * Constructor\n   */\n  constructor() {}\n  /**\n   * Maps your object passed in the creation to fields in your own Dialog classes\n   * @param {T} data\n   */\n  mapDataObject(data) {\n    data = data || {};\n    const keys = Object.keys(data);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (data[key] && this[key] && typeof data[key] === 'object' && typeof this[key] === 'object') {\n        Object.assign(this[key], data[key]);\n      } else {\n        this[key] = data[key];\n      }\n    }\n  }\n  /**\n   * Setup observer\n   * @return {Observable<T1>}\n   */\n  setupObserver() {\n    return Observable.create(observer => {\n      this.observer = observer;\n      // called if observable is unsubscribed to\n      return () => {\n        this.close();\n      };\n    });\n  }\n  /**\n   * Defines what happens when close is called - default this\n   * will just call the default remove modal process. If overridden\n   * must include\n   * @param callback\n   */\n  onClosing(callback) {\n    this.closerCallback = callback;\n  }\n  /**\n   * Closes modal\n   */\n  close() {\n    return this.closerCallback(this).then(v => {\n      if (this.observer) {\n        this.observer.next(this.result);\n        this.observer.complete();\n      }\n      return v;\n    });\n  }\n  /**\n   * keypress binding ngx way\n   * @param evt\n   */\n  onKeydownHandler(evt) {\n    if (this.options && this.options.closeOnEscape) {\n      this.close();\n    }\n  }\n  get ready$() {\n    return this._ready$.asObservable();\n  }\n  markAsReady() {\n    this._ready$.next(true);\n  }\n  static ɵfac = function NgxModalComponent_Factory(t) {\n    return new (t || NgxModalComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxModalComponent,\n    selectors: [[\"ng-component\"]],\n    hostBindings: function NgxModalComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown.escape\", function NgxModalComponent_keydown_escape_HostBindingHandler($event) {\n          return ctx.onKeydownHandler($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function NgxModalComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxModalComponent, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [];\n  }, {\n    onKeydownHandler: [{\n      type: HostListener,\n      args: ['document:keydown.escape', ['$event']]\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultNgxModalOptionConfig, DraggableDirective, NgxModalComponent, NgxModalService, NgxModalServiceConfig, NgxModalView, defaultNgxModalOptions };\n"],
  "mappings": "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",
  "names": ["defaultNgxModalOptions"]
}
